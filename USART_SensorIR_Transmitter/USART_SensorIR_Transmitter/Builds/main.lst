   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 110               	.global	initIO
 112               	initIO:
   1:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #include <stdio.h>
   2:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #include <avr/io.h>
   3:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #include <avr/interrupt.h>
   4:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #include <util/delay.h>
   5:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
   6:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** void initIO(void) {
 114               	.LM0:
 115               	.LFBB1:
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
 120 0000 0895      		ret
 122               	.Lscope1:
 124               	.global	uart_init
 126               	uart_init:
   7:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
   8:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** }
   9:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  10:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** /*
  11:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  12:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Created By:
  13:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  14:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  .------..------..------..------..------.
  15:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  |M.--. ||A.--. ||G.--. ||I.--. ||C.--. |
  16:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  | (\/) || (\/) || :/\: || (\/) || :/\: |
  17:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  | :\/: || :\/: || :\/: || :\/: || :\/: |
  18:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  | '--'M|| '--'A|| '--'G|| '--'I|| '--'C|
  19:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  `------'`------'`------'`------'`------'
  20:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  21:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  22:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  ADC Sensor IR
  23:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Calibracion Manual
  24:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Datos Calibracion y Curva .xls en la
  25:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  carpeta de este archivo
  26:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  27:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  LCD_Data ---> DDRD
  28:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  LCD_RS-RW-EN ---> Pin0-Pin1-Pin2, DDRC
  29:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  ADC_SensorIR ---> Pin0, DDRA
  30:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Resolucion ADC = 8bits
  31:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  32:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  MCU Transmitter Code
  33:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Lee Valor en ADC-Sensor IR
  34:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Send data to slave
  35:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  36:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  */
  37:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  38:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  39:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** /*
  40:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Inicializacion USART
  41:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  */
  42:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  43:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** // define some macros
  44:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #ifndef F_CPU
  45:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #define F_CPU 16000000UL                            // set the CPU clock
  46:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #endif
  47:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #define BAUD 9600                                   // define baud
  48:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** #define BAUDRATE ((F_CPU)/(BAUD*16UL)-1)            // set baud rate value for UBRR
  49:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  50:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** // function to initialize UART
  51:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** void uart_init (void)
  52:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** {
 128               	.LM1:
 129               	.LFBB2:
 130               	/* prologue: function */
 131               	/* frame size = 0 */
 132               	/* stack size = 0 */
 133               	.L__stack_usage = 0
  53:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     UBRRH = (BAUDRATE>>8);                          // shift the register right by 8 bits
 135               	.LM2:
 136 0002 10BC      		out 0x20,__zero_reg__
  54:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     UBRRL = BAUDRATE;                               // set baud rate
 138               	.LM3:
 139 0004 87E6      		ldi r24,lo8(103)
 140 0006 89B9      		out 0x9,r24
  55:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     UCSRB|= (1<<TXEN);                              // enable transmitter
 142               	.LM4:
 143 0008 539A      		sbi 0xa,3
  56:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     UCSRC|= (1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);       // 8bit data format
 145               	.LM5:
 146 000a 80B5      		in r24,0x20
 147 000c 8668      		ori r24,lo8(-122)
 148 000e 80BD      		out 0x20,r24
 149 0010 0895      		ret
 151               	.Lscope2:
 154               	.global	uart_transmit
 156               	uart_transmit:
  57:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** }
  58:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  59:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  60:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  61:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** /*
  62:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Funcion Para Enviar Datos
  63:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  */
  64:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  65:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** void uart_transmit (unsigned char data)
  66:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** {
 158               	.LM6:
 159               	.LFBB3:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164               	.L5:
  67:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     while (!( UCSRA & (1<<UDRE)));                // wait while register is free
 166               	.LM7:
 167 0012 5D9B      		sbis 0xb,5
 168 0014 00C0      		rjmp .L5
  68:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     UDR = data;                                   // load data in the register
 170               	.LM8:
 171 0016 8CB9      		out 0xc,r24
 172 0018 0895      		ret
 174               	.Lscope3:
 175               		.section	.text.startup,"ax",@progbits
 177               	.global	main
 179               	main:
  69:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** }
  70:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  71:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  72:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** /*
  73:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Funcion Para Recibir Datos --- Not USE HERE
  74:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  
  75:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  unsigned char uart_recieve (void)
  76:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  {
  77:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  while(!(UCSRA) & (1<<RXC));                   // wait while data is being received
  78:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  return UDR;                                   // return 8-bit data
  79:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  }
  80:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  */
  81:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  82:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  83:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  84:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** /*
  85:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  Fin Inicializaciones
  86:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****  */
  87:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  88:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  89:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  90:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** 
  91:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c **** int main(void) {
 181               	.LM9:
 182               	.LFBB4:
 183               	/* prologue: function */
 184               	/* frame size = 0 */
 185               	/* stack size = 0 */
 186               	.L__stack_usage = 0
  92:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     initIO();
  93:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
  94:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     uart_init();
 188               	.LM10:
 189 0000 0E94 0000 		call uart_init
 190               	.L8:
 191               	.LBB7:
  95:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
  96:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     /*
  97:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     //Configure the ADC
  98:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADCSRA |= 1 <<ADPS2;
  99:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADMUX |= 1 <<ADLAR;
 100:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADMUX |= 1 <<REFS0;
 101:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADCSRA |= 1 <<ADIE;
 102:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADCSRA |= 1 <<ADEN;
 103:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
 104:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     sei();
 105:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
 106:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     ADCSRA |= 1 <<ADSC;
 107:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     */
 108:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     
 109:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     while (1)
 110:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****     {
 111:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****         int Transfer = 5;
 112:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****         uart_transmit(Transfer);
 193               	.LM11:
 194 0004 85E0      		ldi r24,lo8(5)
 195 0006 0E94 0000 		call uart_transmit
 196               	.LBB8:
 197               	.LBB9:
 199               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 201               	.LM12:
 202 000a 2FEF      		ldi r18,lo8(15999999)
 203 000c 83E2      		ldi r24,hi8(15999999)
 204 000e 94EF      		ldi r25,hlo8(15999999)
 205 0010 2150      		1: subi r18,1
 206 0012 8040      		sbci r24,0
 207 0014 9040      		sbci r25,0
 208 0016 01F4      		brne 1b
 209 0018 00C0      		rjmp .
 210 001a 0000      		nop
 211               	.LBE9:
 212               	.LBE8:
 214               	.Ltext2:
 113:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****         _delay_ms(5000);
 114:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****         Transfer = 230;
 115:/Users/Didi/Desktop/USART_SensorIR_Transmitter/USART_SensorIR_Transmitter/main.c ****         uart_transmit(Transfer);
 216               	.LM13:
 217 001c 86EE      		ldi r24,lo8(-26)
 218 001e 0E94 0000 		call uart_transmit
 219 0022 00C0      		rjmp .L8
 220               	.LBE7:
 222               	.Lscope4:
 223               		.text
 225               	.Letext0:
 226               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:2      *ABS*:0000003e __SP_H__
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:3      *ABS*:0000003d __SP_L__
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:4      *ABS*:0000003f __SREG__
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:6      *ABS*:00000001 __zero_reg__
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:112    .text:00000000 initIO
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:126    .text:00000002 uart_init
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:156    .text:00000012 uart_transmit
/var/folders/yr/91gvm84j38g9s989qv2v5ks40000gn/T//ccXB5f1i.s:179    .text.startup:00000000 main

NO UNDEFINED SYMBOLS
